{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","Number","map","page","className","classNames","disabled","href","onClick","active","length","items","App","useState","setCurrentPage","setPerPage","currentItemsStart","currentItemsEnd","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQO,OAAON,KAClDO,KAAI,SAAAC,GAAI,OAAIA,KAEf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBV,IADZ,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,WACHZ,EAAcE,EAAM,IACtBD,EAAaD,EAAc,IAPjC,oBAcDE,EAAMI,KAAI,SAAAC,GAAI,OACb,oBACEC,UAAWC,IAAW,YAAa,CACjCI,OAAQN,IAASP,IAFrB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMX,EAAaM,IAJ9B,SAMGA,KAREA,MAYT,oBAAIC,UAAWC,IAAW,YAAa,CACrCC,SAAUV,IAAgBE,EAAMA,EAAMY,OAAS,KADjD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAAMA,EAAMY,OAAS,GACpDF,QAAS,WACHZ,EAAcE,EAAMA,EAAMY,OAAS,IACrCb,EAAaD,EAAc,IAPjC,wBCpDFe,EAAQxB,EAAW,EAAG,IACzBe,KAAI,SAAAX,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KAEMC,GAAqBpB,EAAc,GAAKD,EACxCsB,EACFrB,IAAgBG,KAAKC,KAAKW,EAAMD,OAAST,OAAON,IAC9CgB,EAAMD,OACNd,EAAcD,EAEduB,EAAeP,EAClBQ,MAAMH,EAAmBC,GAE5B,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACkCoB,EAAqB,EADvD,cAC8DC,EAD9D,eACoFN,EAAMD,OAD1F,OAIA,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAO1B,EACP2B,SAAU,SAAAC,GACRR,EAAWd,OAAOsB,EAAMC,OAAOH,QAC/BP,EAAe,IAPnB,UAUE,wBAAQO,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOI,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEV,MAAOiB,EAAMD,OACbf,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACM,GAAD,OAAkBW,EAAeX,MAEjD,6BACGe,EAAahB,KAAI,SAAAwB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f885402e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / Number(perPage)))\n    .map(page => page);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage > pages[0]) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames('page-item', {\n        disabled: currentPage === pages[pages.length - 1],\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages[pages.length - 1]}\n          onClick={() => {\n            if (currentPage < pages[pages.length - 1]) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const currentItemsStart = (currentPage - 1) * perPage;\n  const currentItemsEnd\n    = currentPage === Math.ceil(items.length / Number(perPage))\n      ? items.length\n      : currentPage * perPage;\n\n  const visibleItems = items\n    .slice(currentItemsStart, currentItemsEnd);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${(currentItemsStart) + 1} - ${currentItemsEnd} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => setCurrentPage(page)}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}